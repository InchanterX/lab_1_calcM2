import random
import src.constants


class Casino:
    '''
    Give an ability to play casino in special mod of calculator.
    It contains functions for variables, turning on and turning off,
    promo codes, spins and payouts calculations.
    '''

    def __init__(self):
        self.balance = 1000
        # State of casino
        self.active = False
        # State of promo code
        self.used_promo = False

    def enable(self):
        # Enable casino
        self.active = True
        print("üé∞ –ö–∞–∑–∏–Ω–æ –≤–∫–ª—é—á–µ–Ω–æ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MAI Casino!")
        print(f"–í–∞—à –±–∞–ª–∞–Ω—Å: {self.balance} MAI Coins")

    def disable(self):
        # Disable casino
        self.active = False
        print("üé∞ –ö–∞–∑–∏–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–æ, –Ω–æ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –¥–æ–¥–µ–ø!")

    def apply_promo(self, promo_code: str):
        # Activate a promo if it is valid and haven't used yet
        if self.used_promo:
            print("–ü—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω!")
        elif promo_code == "MAI_PO_BLATU":
            self.balance += 500
            self.used_promo = True
            print("–ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! +500 MAI Coins.")
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!")

    def spin(self):
        # Spin the roulette for 100 coins!
        if self.balance < 100:
            print("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏ (100 MAI Coins). –ü–æ–ø–æ–ª–Ω–∏—Ç—å –º–æ–∂–Ω–æ –Ω–∞–ª–∏—á–∫–æ–π —á–µ—Ä–µ–∑ –∞–≤—Ç–æ—Ä–∞ –∫–æ–¥–∞, –æ–±–º–µ–Ω –º–æ–Ω–µ—Ç 1 –∫ 1.")
            return

        self.balance -= 100
        slots = [random.choice(src.constants.SYMBOLS) for _ in range(3)]
        print(f"üé∞|{'|'.join(slots)}|")

        payout = self.calculate_payout(slots)
        self.balance += payout

        # Messages for payouts
        if payout == 1500:
            print(f"!!!–î–ñ–≠–≠–≠–≠–ö–ü–û–û–û–¢ - {payout} MAI Coins!!!")
        elif payout > 0:
            print(f"–Æ—Ö—É—É—É, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {payout} –º–æ–Ω–µ—Ç!")
        print(f"–ë–∞–ª–∞–Ω—Å: {self.balance} MAI Coins.")

    def calculate_payout(self, slots):
        # Count payout
        if slots[0] == slots[1] == slots[2]:
            symbol = slots[0]
            return src.constants.MULTIPLIERS[symbol]*100
        elif slots[0] == slots[1] or slots[1] == slots[2]:
            symbol = slots[1]
            return src.constants.MULTIPLIERS[symbol]*20
        elif slots[0] == slots[2]:
            symbol = slots[0]
            return src.constants.MULTIPLIERS[symbol]*20
        else:
            return 0
